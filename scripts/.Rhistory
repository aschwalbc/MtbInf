delta <- 1
# Define differential equations
dSa  <- -(lambdaa*Sa) + (gammax*Ia1) + (gammax*Ia2) + (gammay*Ia3) - (mua*Sa) - (alphax*Sa) + theta
dIa1 <-  (lambdaa*Sa) - (gammax*Ia1) - (delta*Ia1) - (mua*Ia1) - (alphax*Ia1)
dIa2 <- -(gammax*Ia2) + (delta*Ia1) - (delta*Ia2) - (mua*Ia2) - (alphax*Ia2)
dIa3 <- -(gammay*Ia3) + (delta*Ia2) - (mua*Ia3) - (alphax*Ia3)
dSb  <- -(lambdab*Sb) + (gammax*Ib1) + (gammax*Ib2) + (gammay*Ib3) - (mub*Sb) + (alphax*Sa) - (alphay*Sb)
dIb1 <-  (lambdab*Sb) - (gammax*Ib1) - (delta*Ib1) - (mub*Ib1) - (alphay*Ib1)
dIb2 <- -(gammax*Ib2) + (delta*Ib1) - (delta*Ib2) - (mub*Ib2) - (alphay*Ib2) + (alphax*Ia1)
dIb3 <- -(gammay*Ib3) + (delta*Ib2) - (mub*Ib3) - (alphay*Ib3) + (alphax*Ia2) + (alphax*Ia3)
dSc  <- -(lambdac*Sc) + (gammax*Ic1) + (gammax*Ic2) + (gammay*Ic3) - (muc*Sc) + (alphay*Sb)
dIc1 <-  (lambdac*Sc) - (gammax*Ic1) - (delta*Ic1) - (muc*Ic1)
dIc2 <- -(gammax*Ic2) + (delta*Ic1) - (delta*Ic2) - (muc*Ic2) + (alphay*Ib1)
dIc3 <- -(gammay*Ic3) + (delta*Ic2) - (muc*Ic3) + (alphay*Ib2) + (alphay*Ib3)
out <- list(c(dSa,dIa1,dIa2,dIa3,dSb,dIb1,dIb2,dIb3,dSc,dIc1,dIc2,dIc3))
return(out)
}
times <- seq(from = 0, to = 100, by = 1)
countries <- unique(ARI$iso3) # 203 countries
#countries <- c("JPN","IND","CHN")
list_df <- list()
list_df <- list()
tic()
for (c in 1:(length(countries))){
iso <- countries[c]
print(iso)
parms <- parameters %>% filter(iso3 == iso)
ari <- ARI %>% filter(iso3 == iso)
state <- c(Sa=ari[ari$year == 1950 & ari$acat == "0-14", pop]*0.9,
Ia1=ari[ari$year == 1950 & ari$acat == "0-14", pop]*0.1/3,
Ia2=ari[ari$year == 1950 & ari$acat == "0-14", pop]*0.1/3,
Ia3=ari[ari$year == 1950 & ari$acat == "0-14", pop]*0.1/3,
Sb=ari[ari$year == 1950 & ari$acat == "15-44", pop]*0.9,
Ib1=ari[ari$year == 1950 & ari$acat == "15-44", pop]*0.1/3,
Ib2=ari[ari$year == 1950 & ari$acat == "15-44", pop]*0.1/3,
Ib3=ari[ari$year == 1950 & ari$acat == "15-44", pop]*0.1/3,
Sc=ari[ari$year == 1950 & ari$acat == "45+", pop]*0.9,
Ic1=ari[ari$year == 1950 & ari$acat == "45+", pop]*0.1/3,
Ic2=ari[ari$year == 1950 & ari$acat == "45+", pop]*0.1/3,
Ic3=ari[ari$year == 1950 & ari$acat == "45+", pop]*0.1/3)
output_raw <- ode(y = state, times = times, func = sis,
parms = parms, method = "lsoda")
df <- data.frame("iso3"=iso, cbind(output_raw))
list_df[[c]] <- df
}
mtb <- do.call("rbind",list_df)
toc()
export(mtb,here("data","mtb","Mtbrevsc.Rdata")) # Save data frame
20315/60/60
## Analysis code for Schwalb et al. 2023
## Distributed under CC BY 4.0
## RScript 06: Model.R
# Packages ==========
library(data.table) # Faster than data.frame
library(rio) # Facilitates importing and exporting
library(here) # Building file paths
library(tidyverse) # To use tidyverse
library(ggplot2) # To build comparative plots
library(deSolve) # Solvers for ordinary differential equations
library(tictoc) # Times code run
# 1. Load data ==========
ARI <- import(here("data","ari","ARIrevmixpop.Rdata"))
#ARI <- import(here("data","ari","ARImixpop.Rdata"))
# 2. Data curation ==========
acata <- ARI %>%
filter(acat == '0-14') %>%
mutate(lambdaa = exp(lari)) %>%
rename(mua = mortrate, theta = births) %>%
select(iso3,year,lambdaa,mua,theta)
acatb <- ARI %>%
filter(acat == '15-44') %>%
mutate(lambdab = exp(lari)) %>%
rename(mub = mortrate) %>%
select(iso3,year,lambdab,mub)
acatc <- ARI %>%
filter(acat == '45+') %>%
mutate(lambdac = exp(lari)) %>%
rename(muc = mortrate) %>%
select(iso3,year,lambdac,muc)
parameters <- acata %>%
left_join(acatb, by = c("iso3","year")) %>%
left_join(acatc, by = c("iso3","year")) %>%
mutate(time = year - 1950) %>%
select(iso3,time,lambdaa,lambdab,lambdac,mua,mub,muc,theta)
rm(acata,acatb,acatc)
sis <- function(times, state, parms) {
## Define states
Sa  <- state["Sa"]
Sb  <- state["Sb"]
Sc  <- state["Sc"]
Ia1 <- state["Ia1"]
Ia2 <- state["Ia2"]
Ia3 <- state["Ia3"]
Ia4 <- state["Ia4"]
Ib1 <- state["Ib1"]
Ib2 <- state["Ib2"]
Ib3 <- state["Ib3"]
Ib4 <- state["Ib4"]
Ic1 <- state["Ic1"]
Ic2 <- state["Ic2"]
Ic3 <- state["Ic3"]
Ic4 <- state["Ic4"]
# Extract parameters
lambdaa <- parms[parms$time == floor(times), "lambdaa"]
lambdab <- parms[parms$time == floor(times), "lambdab"]
lambdac <- parms[parms$time == floor(times), "lambdac"]
mua <- parms[parms$time == floor(times), "mua"]
mub <- parms[parms$time == floor(times), "mub"]
muc <- parms[parms$time == floor(times), "muc"]
theta <- parms[parms$time == floor(times), "theta"]
gammax <- 1.12 # 1.12
gammay <- 0.18 # 0.18
gammaz <- 0.18 # 0.18
alphax <- 1/15
alphay <- 1/30
deltax <- 1/1
deltay <- 1/7
# Define differential equations
dSa  <- -(lambdaa*Sa) + (gammax*Ia1) + (gammax*Ia2) + (gammay*Ia3) + (gammaz*Ia4) - (mua*Sa) - (alphax*Sa) + theta
dIa1 <-  (lambdaa*Sa) - (gammax*Ia1) - (deltax*Ia1) - (mua*Ia1) - (alphax*Ia1)
dIa2 <- -(gammax*Ia2) + (deltax*Ia1) - (deltax*Ia2) - (mua*Ia2) - (alphax*Ia2)
dIa3 <- -(gammay*Ia3) + (deltax*Ia2) - (deltay*Ia3) - (mua*Ia3) - (alphax*Ia3)
dIa4 <- -(gammaz*Ia4) + (deltay*Ia3) - (mua*Ia4) - (alphax*Ia4)
dSb  <- -(lambdab*Sb) + (gammax*Ib1) + (gammax*Ib2) + (gammay*Ib3) + (gammaz*Ib4) - (mub*Sb) + (alphax*Sa) - (alphay*Sb)
dIb1 <-  (lambdab*Sb) - (gammax*Ib1) - (deltax*Ib1) - (mub*Ib1) - (alphay*Ib1)
dIb2 <- -(gammax*Ib2) + (deltax*Ib1) - (deltax*Ib2) - (mub*Ib2) - (alphay*Ib2) + (alphax*Ia1)
dIb3 <- -(gammay*Ib3) + (deltax*Ib2) - (deltay*Ib3) - (mub*Ib3) - (alphay*Ib3) + (alphax*Ia2)
dIb4 <- -(gammaz*Ib4) + (deltay*Ib3) - (mub*Ib4) + (alphax*Ia4) + (alphax*Ia3) - (alphay*Ib4)
dSc  <- -(lambdac*Sc) + (gammax*Ic1) + (gammax*Ic2) + (gammay*Ic3) + (gammaz*Ic4) - (muc*Sc) + (alphay*Sb)
dIc1 <-  (lambdac*Sc) - (gammax*Ic1) - (deltax*Ic1) - (muc*Ic1)
dIc2 <- -(gammax*Ic2) + (deltax*Ic1) - (deltax*Ic2) - (muc*Ic2) + (alphay*Ib1)
dIc3 <- -(gammay*Ic3) + (deltax*Ic2) - (deltay*Ic3) - (muc*Ic3) + (alphay*Ib3)
dIc4 <- -(gammaz*Ic4) + (deltay*Ic3) - (muc*Ic4) + (alphay*Ib3) + (alphay*Ib4)
out <- list(c(dSa,dIa1,dIa2,dIa3,dIa4,dSb,dIb1,dIb2,dIb3,dIb4,dSc,dIc1,dIc2,dIc3,dIc4))
return(out)
}
times <- seq(from = 0, to = 100, by = 1)
countries <- unique(ARI$iso3) # 203 countries
#countries <- c("JPN","IND","CHN")
list_df <- list()
tic()
for (c in 1:(length(countries))){
iso <- countries[c]
print(iso)
parms <- parameters %>% filter(iso3 == iso)
ari <- ARI %>% filter(iso3 == iso)
state <- c(Sa=ari[ari$year == 1950 & ari$acat == "0-14", pop]*0.9,
Ia1=ari[ari$year == 1950 & ari$acat == "0-14", pop]*0.025,
Ia2=ari[ari$year == 1950 & ari$acat == "0-14", pop]*0.025,
Ia3=ari[ari$year == 1950 & ari$acat == "0-14", pop]*0.025,
Ia4=ari[ari$year == 1950 & ari$acat == "0-14", pop]*0.025,
Sb=ari[ari$year == 1950 & ari$acat == "15-44", pop]*0.9,
Ib1=ari[ari$year == 1950 & ari$acat == "15-44", pop]*0.025,
Ib2=ari[ari$year == 1950 & ari$acat == "15-44", pop]*0.025,
Ib3=ari[ari$year == 1950 & ari$acat == "15-44", pop]*0.025,
Ib4=ari[ari$year == 1950 & ari$acat == "15-44", pop]*0.025,
Sc=ari[ari$year == 1950 & ari$acat == "45+", pop]*0.9,
Ic1=ari[ari$year == 1950 & ari$acat == "45+", pop]*0.025,
Ic2=ari[ari$year == 1950 & ari$acat == "45+", pop]*0.025,
Ic3=ari[ari$year == 1950 & ari$acat == "45+", pop]*0.025,
Ic4=ari[ari$year == 1950 & ari$acat == "45+", pop]*0.025)
output_raw <- ode(y = state, times = times, func = sis,
parms = parms, method = "lsoda")
df <- data.frame("iso3"=iso, cbind(output_raw))
list_df[[c]] <- df
}
mtb <- do.call("rbind",list_df)
toc()
export(mtb,here("data","mtb","AltMtbrevsc - 06JUN.Rdata")) # Save data frame
#export(mtb,here("data","mtb","AltMtbrev.Rdata")) # Save data frame
#export(mtb,here("data","mtb","AltMtb.Rdata")) # Save data frame
# Packages ==========
library(data.table) # Faster than data.frame
library(rio) # Facilitates importing and exporting
library(rio) # Facilitates importing and exporting
library(rio) # Facilitates importing and exporting
library(here) # Building file paths
library(here) # Building file paths
library(tidyverse) # To use tidyverse
library(ggplot2) # To build comparative plots
library(deSolve) # Solvers for ordinary differential equations
library(tictoc) # Times code run
# 1. Load data ==========
ARI <- import(here("data","ari","ARIrevmixpop.Rdata"))
# 2. Data curation ==========
# Extract age group-specific parameters
agp_0004 <- ARI %>%
filter(agegp == '00-04') %>%
mutate(lambda_0014 = ari) %>%
rename(fp_0004 = fpop, theta = birthrate) %>%
select(iso3,year,lambda_0014,theta,fp_0004)
agp_0509 <- ARI %>%
filter(agegp == '05-09') %>%
mutate(lambda_0014 = ari) %>%
rename(fp_0509 = fpop) %>%
select(iso3,year,lambda_0014,fp_0509)
agp_1014 <- ARI %>%
filter(agegp == '10-14') %>%
mutate(lambda_0014 = ari) %>%
rename(fp_1014 = fpop) %>%
select(iso3,year,lambda_0014,fp_1014)
agp_1519 <- ARI %>%
filter(agegp == '15-19') %>%
mutate(lambda_1544 = ari) %>%
rename(fp_1519 = fpop) %>%
select(iso3,year,lambda_1544,fp_1519)
agp_2024 <- ARI %>%
filter(agegp == '20-24') %>%
mutate(lambda_1544 = ari) %>%
rename(fp_2024 = fpop) %>%
select(iso3,year,lambda_1544,fp_2024)
agp_2529 <- ARI %>%
filter(agegp == '25-29') %>%
mutate(lambda_1544 = ari) %>%
rename(fp_2529 = fpop) %>%
select(iso3,year,lambda_1544,fp_2529)
agp_3034 <- ARI %>%
filter(agegp == '30-34') %>%
mutate(lambda_1544 = ari) %>%
rename(fp_3034 = fpop) %>%
select(iso3,year,lambda_1544,fp_3034)
agp_3539 <- ARI %>%
filter(agegp == '35-39') %>%
mutate(lambda_1544 = ari) %>%
rename(fp_3539 = fpop) %>%
select(iso3,year,lambda_1544,fp_3539)
agp_4044 <- ARI %>%
filter(agegp == '40-44') %>%
mutate(lambda_1544 = ari) %>%
rename(fp_4044 = fpop) %>%
select(iso3,year,lambda_1544,fp_4044)
agp_4549 <- ARI %>%
filter(agegp == '45-49') %>%
mutate(lambda_4500 = ari) %>%
rename(fp_4549 = fpop) %>%
select(iso3,year,lambda_4500,fp_4549)
agp_5054 <- ARI %>%
filter(agegp == '50-54') %>%
mutate(lambda_4500 = ari) %>%
rename(fp_5054 = fpop) %>%
select(iso3,year,lambda_4500,fp_5054)
agp_5559 <- ARI %>%
filter(agegp == '55-59') %>%
mutate(lambda_4500 = ari) %>%
rename(fp_5559 = fpop) %>%
select(iso3,year,lambda_4500,fp_5559)
agp_6064 <- ARI %>%
filter(agegp == '60-64') %>%
mutate(lambda_4500 = ari) %>%
rename(fp_6064 = fpop) %>%
select(iso3,year,lambda_4500,fp_6064)
agp_6569 <- ARI %>%
filter(agegp == '65-69') %>%
mutate(lambda_4500 = ari) %>%
rename(fp_6569 = fpop) %>%
select(iso3,year,lambda_4500,fp_6569)
agp_7074 <- ARI %>%
filter(agegp == '70-74') %>%
mutate(lambda_4500 = ari) %>%
rename(fp_7074 = fpop) %>%
select(iso3,year,lambda_4500,fp_7074)
agp_7579 <- ARI %>%
filter(agegp == '75-79') %>%
mutate(lambda_4500 = ari) %>%
rename(fp_7579 = fpop) %>%
select(iso3,year,lambda_4500,fp_7579)
agp_8000 <- ARI %>%
filter(agegp == '80+') %>%
mutate(lambda_4500 = ari) %>%
rename(fp_8000 = fpop) %>%
select(iso3,year,lambda_4500,fp_8000)
parameters <- agp_0004 %>% # Create parameter dataframe
left_join(agp_0509, by = c("iso3","year","lambda_0014")) %>%
left_join(agp_1014, by = c("iso3","year","lambda_0014")) %>%
left_join(agp_1519, by = c("iso3","year")) %>%
left_join(agp_2024, by = c("iso3","year","lambda_1544")) %>%
left_join(agp_2529, by = c("iso3","year","lambda_1544")) %>%
left_join(agp_3034, by = c("iso3","year","lambda_1544")) %>%
left_join(agp_3539, by = c("iso3","year","lambda_1544")) %>%
left_join(agp_4044, by = c("iso3","year","lambda_1544")) %>%
left_join(agp_4549, by = c("iso3","year")) %>%
left_join(agp_5054, by = c("iso3","year","lambda_4500")) %>%
left_join(agp_5559, by = c("iso3","year","lambda_4500")) %>%
left_join(agp_6064, by = c("iso3","year","lambda_4500")) %>%
left_join(agp_6569, by = c("iso3","year","lambda_4500")) %>%
left_join(agp_7074, by = c("iso3","year","lambda_4500")) %>%
left_join(agp_7579, by = c("iso3","year","lambda_4500")) %>%
left_join(agp_8000, by = c("iso3","year","lambda_4500")) %>%
mutate(time = year - 1950) %>%
select(iso3,time,starts_with("lambda"),starts_with("fp"),"theta")
rm(list = ls(pattern = "^agp"))
sis <- function(times, state, parms) {
## Define states
S0004  <- state["S0004"]; I0004a  <- state["I0004a"]; I0004b  <- state["I0004b"]; I0004c  <- state["I0004c"]
S0509  <- state["S0509"]; I0509a  <- state["I0509a"]; I0509b  <- state["I0509b"]; I0509c  <- state["I0509c"]
S1014  <- state["S1014"]; I1014a  <- state["I1014a"]; I1014b  <- state["I1014b"]; I1014c  <- state["I1014c"]
S1519  <- state["S1519"]; I1519a  <- state["I1519a"]; I1519b  <- state["I1519b"]; I1519c  <- state["I1519c"]
S2024  <- state["S2024"]; I2024a  <- state["I2024a"]; I2024b  <- state["I2024b"]; I2024c  <- state["I2024c"]
S2529  <- state["S2529"]; I2529a  <- state["I2529a"]; I2529b  <- state["I2529b"]; I2529c  <- state["I2529c"]
S3034  <- state["S3034"]; I3034a  <- state["I3034a"]; I3034b  <- state["I3034b"]; I3034c  <- state["I3034c"]
S3539  <- state["S3539"]; I3539a  <- state["I3539a"]; I3539b  <- state["I3539b"]; I3539c  <- state["I3539c"]
S4044  <- state["S4044"]; I4044a  <- state["I4044a"]; I4044b  <- state["I4044b"]; I4044c  <- state["I4044c"]
S4549  <- state["S4549"]; I4549a  <- state["I4549a"]; I4549b  <- state["I4549b"]; I4549c  <- state["I4549c"]
S5054  <- state["S5054"]; I5054a  <- state["I5054a"]; I5054b  <- state["I5054b"]; I5054c  <- state["I5054c"]
S5559  <- state["S5559"]; I5559a  <- state["I5559a"]; I5559b  <- state["I5559b"]; I5559c  <- state["I5559c"]
S6064  <- state["S6064"]; I6064a  <- state["I6064a"]; I6064b  <- state["I6064b"]; I6064c  <- state["I6064c"]
S6569  <- state["S6569"]; I6569a  <- state["I6569a"]; I6569b  <- state["I6569b"]; I6569c  <- state["I6569c"]
S7074  <- state["S7074"]; I7074a  <- state["I7074a"]; I7074b  <- state["I7074b"]; I7074c  <- state["I7074c"]
S7579  <- state["S7579"]; I7579a  <- state["I7579a"]; I7579b  <- state["I7579b"]; I7579c  <- state["I7579c"]
S8000  <- state["S8000"]; I8000a  <- state["I8000a"]; I8000b  <- state["I8000b"]; I8000c  <- state["I8000c"]
# Extract parameters
lambda_0014 <- parms[parms$time == floor(times), "lambda_0014"] # ARI 00-14 yo
lambda_1544 <- parms[parms$time == floor(times), "lambda_1544"] # ARI 15-44 yo
lambda_4500 <- parms[parms$time == floor(times), "lambda_4500"] # ARI 45+ yo
fp_0004 <- parms[parms$time == floor(times), "fp_0004"] # Pop fraction 00-04 yo
fp_0509 <- parms[parms$time == floor(times), "fp_0509"] # Pop fraction 05-09 yo
fp_1014 <- parms[parms$time == floor(times), "fp_1014"] # Pop fraction 10-14 yo
fp_1519 <- parms[parms$time == floor(times), "fp_1519"] # Pop fraction 15-19 yo
fp_2024 <- parms[parms$time == floor(times), "fp_2024"] # Pop fraction 20-24 yo
fp_2529 <- parms[parms$time == floor(times), "fp_2529"] # Pop fraction 25-29 yo
fp_3034 <- parms[parms$time == floor(times), "fp_3034"] # Pop fraction 30-34 yo
fp_3539 <- parms[parms$time == floor(times), "fp_3539"] # Pop fraction 35-39 yo
fp_4044 <- parms[parms$time == floor(times), "fp_4044"] # Pop fraction 40-44 yo
fp_4549 <- parms[parms$time == floor(times), "fp_4549"] # Pop fraction 45-49 yo
fp_5054 <- parms[parms$time == floor(times), "fp_5054"] # Pop fraction 50-54 yo
fp_5559 <- parms[parms$time == floor(times), "fp_5559"] # Pop fraction 55-59 yo
fp_6064 <- parms[parms$time == floor(times), "fp_6064"] # Pop fraction 60-64 yo
fp_6569 <- parms[parms$time == floor(times), "fp_6569"] # Pop fraction 65-69 yo
fp_7074 <- parms[parms$time == floor(times), "fp_7074"] # Pop fraction 70-74 yo
fp_7579 <- parms[parms$time == floor(times), "fp_7579"] # Pop fraction 75-79 yo
fp_8000 <- parms[parms$time == floor(times), "fp_8000"] # Pop fraction 80+ yo
theta <- parms[parms$time == floor(times), "theta"] # Birth rate
gammax <- 1.12 # Self-clearance rate (1st and 2nd year of infection) [Horton et al. 2023]
gammay <- 1.12 # Self-clearance rate (1st and 2nd year of infection) [Horton et al. 2023]
gammaz <- 0.0 # Self-clearance rate (3rd year of infection and over) [Horton et al. 2023]
alpha <- 1/5 # Age transition
kappa <- 1 # Transition between infection years
# Define differential equations
dS0004  <- -(lambda_0014*S0004) + (gammax*I0004a) + (gammay*I0004b) + (gammaz*I0004c) + (theta*(1/fp_0004)*(1-S0004))
dI0004a <-  (lambda_0014*S0004) - (gammax*I0004a) - (kappa*I0004a) - (theta*(1/fp_0004)*I0004a)
dI0004b <- -(gammay*I0004b) - (kappa*I0004b) + (kappa*I0004a) - (theta*(1/fp_0004)*I0004b)
dI0004c <- -(gammaz*I0004c) + (kappa*I0004b) - (theta*(1/fp_0004)*I0004c)
dS0509  <- -(lambda_0014*S0509) + (gammax*I0509a) + (gammay*I0509b) + (gammaz*I0509c) + (alpha*(S0004-S0509)*(fp_0004/fp_0509))
dI0509a <-  (lambda_0014*S0509) - (gammax*I0509a) - (kappa*I0509a) + (alpha*(I0004a-I0509a)*(fp_0004/fp_0509))
dI0509b <- -(gammay*I0509b) - (kappa*I0509b) + (kappa*I0509a) + (alpha*(I0004b-I0509b)*(fp_0004/fp_0509))
dI0509c <- -(gammaz*I0509c) + (kappa*I0509b) + (alpha*(I0004c-I0509c)*(fp_0004/fp_0509))
dS1014  <- -(lambda_0014*S1014) + (gammax*I1014a) + (gammay*I1014b) + (gammaz*I1014c) + (alpha*(S0509-S1014)*(fp_0509/fp_1014))
dI1014a <-  (lambda_0014*S1014) - (gammax*I1014a) - (kappa*I1014a) + (alpha*(I0509a-I1014a)*(fp_0509/fp_1014))
dI1014b <- -(gammay*I1014b) - (kappa*I1014b) + (kappa*I1014a) + (alpha*(I0509b-I1014b)*(fp_0509/fp_1014))
dI1014c <- -(gammaz*I1014c) + (kappa*I1014b) + (alpha*(I0509c-I1014c)*(fp_0509/fp_1014))
dS1519  <- -(lambda_1544*S1519) + (gammax*I1519a) + (gammay*I1519b) + (gammaz*I1519c) + (alpha*(S1014-S1519)*(fp_1014/fp_1519))
dI1519a <-  (lambda_1544*S1519) - (gammax*I1519a) - (kappa*I1519a) + (alpha*(I1014a-I1519a)*(fp_1014/fp_1519))
dI1519b <- -(gammay*I1519b) - (kappa*I1519b) + (kappa*I1519a) + (alpha*(I1014b-I1519b)*(fp_1014/fp_1519))
dI1519c <- -(gammaz*I1519c) + (kappa*I1519b) + (alpha*(I1014c-I1519c)*(fp_1014/fp_1519))
dS2024  <- -(lambda_1544*S2024) + (gammax*I2024a) + (gammay*I2024b) + (gammaz*I2024c) + (alpha*(S1519-S2024)*(fp_1519/fp_2024))
dI2024a <-  (lambda_1544*S2024) - (gammax*I2024a) - (kappa*I2024a) + (alpha*(I1519a-I2024a)*(fp_1519/fp_2024))
dI2024b <- -(gammay*I2024b) - (kappa*I2024b) + (kappa*I2024a) + (alpha*(I1519b-I2024b)*(fp_1519/fp_2024))
dI2024c <- -(gammaz*I2024c) + (kappa*I2024b) + (alpha*(I1519c-I2024c)*(fp_1519/fp_2024))
dS2529  <- -(lambda_1544*S2529) + (gammax*I2529a) + (gammay*I2529b) + (gammaz*I2529c) + (alpha*(S2024-S2529)*(fp_2024/fp_2529))
dI2529a <-  (lambda_1544*S2529) - (gammax*I2529a) - (kappa*I2529a) + (alpha*(I2024a-I2529a)*(fp_2024/fp_2529))
dI2529b <- -(gammay*I2529b) - (kappa*I2529b) + (kappa*I2529a) + (alpha*(I2024b-I2529b)*(fp_2024/fp_2529))
dI2529c <- -(gammaz*I2529c) + (kappa*I2529b) + (alpha*(I2024c-I2529c)*(fp_2024/fp_2529))
dS3034  <- -(lambda_1544*S3034) + (gammax*I3034a) + (gammay*I3034b) + (gammaz*I3034c) + (alpha*(S2529-S3034)*(fp_2529/fp_3034))
dI3034a <-  (lambda_1544*S3034) - (gammax*I3034a) - (kappa*I3034a) + (alpha*(I2529a-I3034a)*(fp_2529/fp_3034))
dI3034b <- -(gammay*I3034b) - (kappa*I3034b) + (kappa*I3034a) + (alpha*(I2529b-I3034b)*(fp_2529/fp_3034))
dI3034c <- -(gammaz*I3034c) + (kappa*I3034b) + (alpha*(I2529c-I3034c)*(fp_2529/fp_3034))
dS3539  <- -(lambda_1544*S3539) + (gammax*I3539a) + (gammay*I3539b) + (gammaz*I3539c) + (alpha*(S3034-S3539)*(fp_3034/fp_3539))
dI3539a <-  (lambda_1544*S3539) - (gammax*I3539a) - (kappa*I3539a) + (alpha*(I3034a-I3539a)*(fp_3034/fp_3539))
dI3539b <- -(gammay*I3539b) - (kappa*I3539b) + (kappa*I3539a) + (alpha*(I3034b-I3539b)*(fp_3034/fp_3539))
dI3539c <- -(gammaz*I3539c) + (kappa*I3539b) + (alpha*(I3034c-I3539c)*(fp_3034/fp_3539))
dS4044  <- -(lambda_1544*S4044) + (gammax*I4044a) + (gammay*I4044b) + (gammaz*I4044c) + (alpha*(S3539-S4044)*(fp_3539/fp_4044))
dI4044a <-  (lambda_1544*S4044) - (gammax*I4044a) - (kappa*I4044a) + (alpha*(I3539a-I4044a)*(fp_3539/fp_4044))
dI4044b <- -(gammay*I4044b) - (kappa*I4044b) + (kappa*I4044a) + (alpha*(I3539b-I4044b)*(fp_3539/fp_4044))
dI4044c <- -(gammaz*I4044c) + (kappa*I4044b) + (alpha*(I3539c-I4044c)*(fp_3539/fp_4044))
dS4549  <- -(lambda_4500*S4549) + (gammax*I4549a) + (gammay*I4549b) + (gammaz*I4549c) + (alpha*(S4044-S4549)*(fp_4044/fp_4549))
dI4549a <-  (lambda_4500*S4549) - (gammax*I4549a) - (kappa*I4549a) + (alpha*(I4044a-I4549a)*(fp_4044/fp_4549))
dI4549b <- -(gammay*I4549b) - (kappa*I4549b) + (kappa*I4549a) + (alpha*(I4044b-I4549b)*(fp_4044/fp_4549))
dI4549c <- -(gammaz*I4549c) + (kappa*I4549b) + (alpha*(I4044c-I4549c)*(fp_4044/fp_4549))
dS5054  <- -(lambda_4500*S5054) + (gammax*I5054a) + (gammay*I5054b) + (gammaz*I5054c) + (alpha*(S4549-S5054)*(fp_4549/fp_5054))
dI5054a <-  (lambda_4500*S5054) - (gammax*I5054a) - (kappa*I5054a) + (alpha*(I4549a-I5054a)*(fp_4549/fp_5054))
dI5054b <- -(gammay*I5054b) - (kappa*I5054b) + (kappa*I5054a) + (alpha*(I4549b-I5054b)*(fp_4549/fp_5054))
dI5054c <- -(gammaz*I5054c) + (kappa*I5054b) + (alpha*(I4549c-I5054c)*(fp_4549/fp_5054))
dS5559  <- -(lambda_4500*S5559) + (gammax*I5559a) + (gammay*I5559b) + (gammaz*I5559c) + (alpha*(S5054-S5559)*(fp_5054/fp_5559))
dI5559a <-  (lambda_4500*S5559) - (gammax*I5559a) - (kappa*I5559a) + (alpha*(I5054a-I5559a)*(fp_5054/fp_5559))
dI5559b <- -(gammay*I5559b) - (kappa*I5559b) + (kappa*I5559a) + (alpha*(I5054b-I5559b)*(fp_5054/fp_5559))
dI5559c <- -(gammaz*I5559c) + (kappa*I5559b) + (alpha*(I5054c-I5559c)*(fp_5054/fp_5559))
dS6064  <- -(lambda_4500*S6064) + (gammax*I6064a) + (gammay*I6064b) + (gammaz*I6064c) + (alpha*(S5559-S6064)*(fp_5559/fp_6064))
dI6064a <-  (lambda_4500*S6064) - (gammax*I6064a) - (kappa*I6064a) + (alpha*(I5559a-I6064a)*(fp_5559/fp_6064))
dI6064b <- -(gammay*I6064b) - (kappa*I6064b) + (kappa*I6064a) + (alpha*(I5559b-I6064b)*(fp_5559/fp_6064))
dI6064c <- -(gammaz*I6064c) + (kappa*I6064b) + (alpha*(I5559c-I6064c)*(fp_5559/fp_6064))
dS6569  <- -(lambda_4500*S6569) + (gammax*I6569a) + (gammay*I6569b) + (gammaz*I6569c) + (alpha*(S6064-S6569)*(fp_6064/fp_6569))
dI6569a <-  (lambda_4500*S6569) - (gammax*I6569a) - (kappa*I6569a) + (alpha*(I6064a-I6569a)*(fp_6064/fp_6569))
dI6569b <- -(gammay*I6569b) - (kappa*I6569b) + (kappa*I6569a) + (alpha*(I6064b-I6569b)*(fp_6064/fp_6569))
dI6569c <- -(gammaz*I6569c) + (kappa*I6569b) + (alpha*(I6064c-I6569c)*(fp_6064/fp_6569))
dS7074  <- -(lambda_4500*S7074) + (gammax*I7074a) + (gammay*I7074b) + (gammaz*I7074c) + (alpha*(S6569-S7074)*(fp_6569/fp_7074))
dI7074a <-  (lambda_4500*S7074) - (gammax*I7074a) - (kappa*I7074a) + (alpha*(I6569a-I7074a)*(fp_6569/fp_7074))
dI7074b <- -(gammay*I7074b) - (kappa*I7074b) + (kappa*I7074a) + (alpha*(I6569b-I7074b)*(fp_6569/fp_7074))
dI7074c <- -(gammaz*I7074c) + (kappa*I7074b) + (alpha*(I6569c-I7074c)*(fp_6569/fp_7074))
dS7579  <- -(lambda_4500*S7579) + (gammax*I7579a) + (gammay*I7579b) + (gammaz*I7579c) + (alpha*(S7074-S7579)*(fp_7074/fp_7579))
dI7579a <-  (lambda_4500*S7579) - (gammax*I7579a) - (kappa*I7579a) + (alpha*(I7074a-I7579a)*(fp_7074/fp_7579))
dI7579b <- -(gammay*I7579b) - (kappa*I7579b) + (kappa*I7579a) + (alpha*(I7074b-I7579b)*(fp_7074/fp_7579))
dI7579c <- -(gammaz*I7579c) + (kappa*I7579b) + (alpha*(I7074c-I7579c)*(fp_7074/fp_7579))
dS8000  <- -(lambda_4500*S8000) + (gammax*I8000a) + (gammay*I8000b) + (gammaz*I8000c) + (alpha*(S7579-S8000)*(fp_7579/fp_8000))
dI8000a <-  (lambda_4500*S8000) - (gammax*I8000a) - (kappa*I8000a) + (alpha*(I7579a-I8000a)*(fp_7579/fp_8000))
dI8000b <- -(gammay*I8000b) - (kappa*I8000b) + (kappa*I8000a) + (alpha*(I7579b-I8000b)*(fp_7579/fp_8000))
dI8000c <- -(gammaz*I8000c) + (kappa*I8000b) + (alpha*(I7579c-I8000c)*(fp_7579/fp_8000))
out <- list(c(
dS0004,dI0004a,dI0004b,dI0004c,dS0509,dI0509a,dI0509b,dI0509c,dS1014,dI1014a,dI1014b,dI1014c,
dS1519,dI1519a,dI1519b,dI1519c,dS2024,dI2024a,dI2024b,dI2024c,dS2529,dI2529a,dI2529b,dI2529c,
dS3034,dI3034a,dI3034b,dI3034c,dS3539,dI3539a,dI3539b,dI3539c,dS4044,dI4044a,dI4044b,dI4044c,
dS4549,dI4549a,dI4549b,dI4549c,dS5054,dI5054a,dI5054b,dI5054c,dS5559,dI5559a,dI5559b,dI5559c,
dS6064,dI6064a,dI6064b,dI6064c,dS6569,dI6569a,dI6569b,dI6569c,dS7074,dI7074a,dI7074b,dI7074c,
dS7579,dI7579a,dI7579b,dI7579c,dS8000,dI8000a,dI8000b,dI8000c))
return(out)
}
times <- seq(from = 0, to = 100, by = 1)
countries <- unique(ARI$iso3) # 203 countries
countries <- c("JPN","IND","CHN")
countries <- "JPN"
list_df <- list()
tic()
for (c in 1:(length(countries))){
iso <- countries[c]
print(iso)
parms <- parameters %>% filter(iso3 == iso)
ari <- ARI %>% filter(iso3 == iso)
maxage <- c(5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,90)
state <- c(S0004 = exp((-(ari[year == 1950 & acat == "0-14", ari][1])*2.5)),
I0004a = (1-exp((-(ari[year == 1950 & acat == "0-14", ari][1])*2.5)))*(1/(sum(1+1+(maxage[1]-3)))),
I0004b = (1-exp((-(ari[year == 1950 & acat == "0-14", ari][1])*2.5)))*(1/(sum(1+1+(maxage[1]-3)))),
I0004c = (1-exp((-(ari[year == 1950 & acat == "0-14", ari][1])*2.5)))*((maxage[1]-3)/(sum(1+1+(maxage[1]-3)))),
S0509 = exp((-(ari[year == 1950 & acat == "0-14", ari][1])*7.5)),
I0509a = (1-exp((-(ari[year == 1950 & acat == "0-14", ari][1])*7.5)))*(1/(sum(1+1+(maxage[2]-3)))),
I0509b = (1-exp((-(ari[year == 1950 & acat == "0-14", ari][1])*7.5)))*(1/(sum(1+1+(maxage[2]-3)))),
I0509c = (1-exp((-(ari[year == 1950 & acat == "0-14", ari][1])*7.5)))*((maxage[2]-3)/(sum(1+1+(maxage[2]-3)))),
S1014 = exp((-(ari[year == 1950 & acat == "0-14", ari][1])*12.5)),
I1014a = (1-exp((-(ari[year == 1950 & acat == "0-14", ari][1])*12.5)))*(1/(sum(1+1+(maxage[3]-3)))),
I1014b = (1-exp((-(ari[year == 1950 & acat == "0-14", ari][1])*12.5)))*(1/(sum(1+1+(maxage[3]-3)))),
I1014c = (1-exp((-(ari[year == 1950 & acat == "0-14", ari][1])*12.5)))*((maxage[3]-3)/(sum(1+1+(maxage[3]-3)))),
S1519 = exp((-(ari[year == 1950 & acat == "15-44", ari][1])*17.5)),
I1519a = (1-exp((-(ari[year == 1950 & acat == "15-44", ari][1])*17.5)))*(1/(sum(1+1+(maxage[4]-3)))),
I1519b = (1-exp((-(ari[year == 1950 & acat == "15-44", ari][1])*17.5)))*(1/(sum(1+1+(maxage[4]-3)))),
I1519c = (1-exp((-(ari[year == 1950 & acat == "15-44", ari][1])*17.5)))*((maxage[4]-3)/(sum(1+1+(maxage[4]-3)))),
S2024 = exp((-(ari[year == 1950 & acat == "15-44", ari][1])*22.5)),
I2024a = (1-exp((-(ari[year == 1950 & acat == "15-44", ari][1])*22.5)))*(1/(sum(1+1+(maxage[5]-3)))),
I2024b = (1-exp((-(ari[year == 1950 & acat == "15-44", ari][1])*22.5)))*(1/(sum(1+1+(maxage[5]-3)))),
I2024c = (1-exp((-(ari[year == 1950 & acat == "15-44", ari][1])*22.5)))*((maxage[5]-3)/(sum(1+1+(maxage[5]-3)))),
S2529 = exp((-(ari[year == 1950 & acat == "15-44", ari][1])*27.5)),
I2529a = (1-exp((-(ari[year == 1950 & acat == "15-44", ari][1])*27.5)))*(1/(sum(1+1+(maxage[6]-3)))),
I2529b = (1-exp((-(ari[year == 1950 & acat == "15-44", ari][1])*27.5)))*(1/(sum(1+1+(maxage[6]-3)))),
I2529c = (1-exp((-(ari[year == 1950 & acat == "15-44", ari][1])*27.5)))*((maxage[6]-3)/(sum(1+1+(maxage[6]-3)))),
S3034 = exp((-(ari[year == 1950 & acat == "15-44", ari][1])*32.5)),
I3034a = (1-exp((-(ari[year == 1950 & acat == "15-44", ari][1])*32.5)))*(1/(sum(1+1+(maxage[7]-3)))),
I3034b = (1-exp((-(ari[year == 1950 & acat == "15-44", ari][1])*32.5)))*(1/(sum(1+1+(maxage[7]-3)))),
I3034c = (1-exp((-(ari[year == 1950 & acat == "15-44", ari][1])*32.5)))*((maxage[7]-3)/(sum(1+1+(maxage[7]-3)))),
S3539 = exp((-(ari[year == 1950 & acat == "15-44", ari][1])*37.5)),
I3539a = (1-exp((-(ari[year == 1950 & acat == "15-44", ari][1])*37.5)))*(1/(sum(1+1+(maxage[8]-3)))),
I3539b = (1-exp((-(ari[year == 1950 & acat == "15-44", ari][1])*37.5)))*(1/(sum(1+1+(maxage[8]-3)))),
I3539c = (1-exp((-(ari[year == 1950 & acat == "15-44", ari][1])*37.5)))*((maxage[8]-3)/(sum(1+1+(maxage[8]-3)))),
S4044 = exp((-(ari[year == 1950 & acat == "15-44", ari][1])*42.5)),
I4044a = (1-exp((-(ari[year == 1950 & acat == "15-44", ari][1])*42.5)))*(1/(sum(1+1+(maxage[9]-3)))),
I4044b = (1-exp((-(ari[year == 1950 & acat == "15-44", ari][1])*42.5)))*(1/(sum(1+1+(maxage[9]-3)))),
I4044c = (1-exp((-(ari[year == 1950 & acat == "15-44", ari][1])*42.5)))*((maxage[9]-3)/(sum(1+1+(maxage[9]-3)))),
S4549 = exp((-(ari[year == 1950 & acat == "45+", ari][1])*47.5)),
I4549a = (1-exp((-(ari[year == 1950 & acat == "45+", ari][1])*47.5)))*(1/(sum(1+1+(maxage[10]-3)))),
I4549b = (1-exp((-(ari[year == 1950 & acat == "45+", ari][1])*47.5)))*(1/(sum(1+1+(maxage[10]-3)))),
I4549c = (1-exp((-(ari[year == 1950 & acat == "45+", ari][1])*47.5)))*((maxage[10]-3)/(sum(1+1+(maxage[10]-3)))),
S5054 = exp((-(ari[year == 1950 & acat == "45+", ari][1])*52.5)),
I5054a = (1-exp((-(ari[year == 1950 & acat == "45+", ari][1])*52.5)))*(1/(sum(1+1+(maxage[11]-3)))),
I5054b = (1-exp((-(ari[year == 1950 & acat == "45+", ari][1])*52.5)))*(1/(sum(1+1+(maxage[11]-3)))),
I5054c = (1-exp((-(ari[year == 1950 & acat == "45+", ari][1])*52.5)))*((maxage[11]-3)/(sum(1+1+(maxage[11]-3)))),
S5559 = exp((-(ari[year == 1950 & acat == "45+", ari][1])*57.5)),
I5559a = (1-exp((-(ari[year == 1950 & acat == "45+", ari][1])*57.5)))*(1/(sum(1+1+(maxage[12]-3)))),
I5559b = (1-exp((-(ari[year == 1950 & acat == "45+", ari][1])*57.5)))*(1/(sum(1+1+(maxage[12]-3)))),
I5559c = (1-exp((-(ari[year == 1950 & acat == "45+", ari][1])*57.5)))*((maxage[12]-3)/(sum(1+1+(maxage[12]-3)))),
S6064 = exp((-(ari[year == 1950 & acat == "45+", ari][1])*62.5)),
I6064a = (1-exp((-(ari[year == 1950 & acat == "45+", ari][1])*62.5)))*(1/(sum(1+1+(maxage[13]-3)))),
I6064b = (1-exp((-(ari[year == 1950 & acat == "45+", ari][1])*62.5)))*(1/(sum(1+1+(maxage[13]-3)))),
I6064c = (1-exp((-(ari[year == 1950 & acat == "45+", ari][1])*62.5)))*((maxage[13]-3)/(sum(1+1+(maxage[13]-3)))),
S6569 = exp((-(ari[year == 1950 & acat == "45+", ari][1])*67.5)),
I6569a = (1-exp((-(ari[year == 1950 & acat == "45+", ari][1])*67.5)))*(1/(sum(1+1+(maxage[14]-3)))),
I6569b = (1-exp((-(ari[year == 1950 & acat == "45+", ari][1])*67.5)))*(1/(sum(1+1+(maxage[14]-3)))),
I6569c = (1-exp((-(ari[year == 1950 & acat == "45+", ari][1])*67.5)))*((maxage[14]-3)/(sum(1+1+(maxage[14]-3)))),
S7074 = exp((-(ari[year == 1950 & acat == "45+", ari][1])*72.5)),
I7074a = (1-exp((-(ari[year == 1950 & acat == "45+", ari][1])*72.5)))*(1/(sum(1+1+(maxage[15]-3)))),
I7074b = (1-exp((-(ari[year == 1950 & acat == "45+", ari][1])*72.5)))*(1/(sum(1+1+(maxage[15]-3)))),
I7074c = (1-exp((-(ari[year == 1950 & acat == "45+", ari][1])*72.5)))*((maxage[15]-3)/(sum(1+1+(maxage[15]-3)))),
S7579 = exp((-(ari[year == 1950 & acat == "45+", ari][1])*77.5)),
I7579a = (1-exp((-(ari[year == 1950 & acat == "45+", ari][1])*77.5)))*(1/(sum(1+1+(maxage[16]-3)))),
I7579b = (1-exp((-(ari[year == 1950 & acat == "45+", ari][1])*77.5)))*(1/(sum(1+1+(maxage[16]-3)))),
I7579c = (1-exp((-(ari[year == 1950 & acat == "45+", ari][1])*77.5)))*((maxage[16]-3)/(sum(1+1+(maxage[16]-3)))),
S8000 = exp((-(ari[year == 1950 & acat == "45+", ari][1])*85)),
I8000a = (1-exp((-(ari[year == 1950 & acat == "45+", ari][1])*85)))*(1/(sum(1+1+(maxage[17]-3)))),
I8000b = (1-exp((-(ari[year == 1950 & acat == "45+", ari][1])*85)))*(1/(sum(1+1+(maxage[17]-3)))),
I8000c = (1-exp((-(ari[year == 1950 & acat == "45+", ari][1])*85)))*((maxage[17]-3)/(sum(1+1+(maxage[17]-3)))))
output_raw <- ode(y = state, times = times, func = sis,
parms = parms, method = "lsoda")
df <- data.frame("iso3"=iso, cbind(output_raw))
list_df[[c]] <- df
}
mtb <- do.call("rbind",list_df)
toc()
4840/60
mtbi <- mtb %>%
mutate(N0004 = S0004 + I0004a + I0004b + I0004c, N0509 = S0509 + I0509a + I0509b + I0509c, N1014 = S1014 + I1014a + I1014b + I1014c,
N1519 = S1519 + I1519a + I1519b + I1519c, N2024 = S2024 + I2024a + I2024b + I2024c, N2529 = S2529 + I2529a + I2529b + I2529c,
N3034 = S3034 + I3034a + I3034b + I3034c, N3539 = S3539 + I3539a + I3539b + I3539c, N4044 = S4044 + I4044a + I4044b + I4044c,
N4549 = S4549 + I4549a + I4549b + I4549c, N5054 = S5054 + I5054a + I5054b + I5054c, N5559 = S5559 + I5559a + I5559b + I5559c,
N6064 = S6064 + I6064a + I6064b + I6064c, N6569 = S6569 + I6569a + I6569b + I6569c, N7074 = S7074 + I7074a + I7074b + I7074c,
N7579 = S7579 + I7579a + I7579b + I7579c, N8000 = S8000 + I8000a + I8000b + I8000c)
View(mtbi)
export(mtb,here("data","mtb","JPN.Rdata")) # Save data frame
